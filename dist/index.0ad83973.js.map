{"mappings":"AAAA,MAAMA,cAAgBC,SAASC,iBAAiB,SAC1CC,gBAAkBF,SAASG,cAAc,UACzCC,WAAaJ,SAASC,iBAAiB,qBAC7C,IAsBII,MACAC,MACAC,KAxBAC,SAAW,EA8Bf,SAASC,gBAAgBC,EAAGC,GACxB,OAAkB,MAAfL,MAAMK,GAAGD,MACTE,eAAeF,EAAGC,EAAI,EAAG,KAAM,WAC/BC,eAAeF,EAAGC,EAAI,EAAG,OAAQ,SACjCC,eAAeF,EAAI,EAAGC,EAAG,QAAS,UAClCC,eAAeF,EAAI,EAAGC,EAAG,OAAQ,WAExC,CAEA,SAASC,eAAeF,EAAGC,EAAGE,EAAeC,GAEzC,OADAC,QAAQC,IAAIL,KACTD,EAAG,GAAKA,EAAE,GAAOC,EAAI,GAAKA,EAAI,KACf,MAAfL,MAAMK,GAAGD,IACTJ,MAAMK,GAAGD,GAAGI,IAAmBP,KAAKC,UAAUK,GAErD,CAEA,SAASI,WACL,IAAI,IAAIC,EAAE,EAAGA,EAAEZ,MAAMa,OAAQD,IACzB,IAAI,IAAIE,EAAE,EAAGA,EAAEd,MAAM,GAAGa,OAAQC,IAC5B,GAAmB,OAAhBd,MAAMY,GAAGE,GAAa,OAAO,EAGxC,OAAO,CACX,CAEA,SAASC,WACLC,MAAM,sBACDC,MAAKC,IACF,GAAIA,EAASC,GAAI,OAAOD,EAASE,OAE7BC,MAAM,6CAA+CH,EAASI,OAAM,IAG3EL,MAAKM,IACFxB,MAAQwB,EAAK,KAAQ,GAGjC,CACA,SAASC,YACLxB,MAAQ,CAAC,CAAC,KAAM,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,KAAM,MAAO,CAAC,KAAM,KAAM,KAAM,OAChFC,KAAO,CAAC,KAAM,KAAM,MACpBH,WAAW2B,SAAQC,IACfA,EAAQC,UAAY,MAExBC,KAAK,GACLA,KAAK,GACLA,KAAK,EACT,CAEA,SAASA,KAAKC,GACV,IAAIC,EAAQC,qBACZ9B,KAAK4B,GAAM9B,MAAM+B,GACjBrC,cAAcoC,GAAIF,UAAY,iBAAmB5B,MAAM+B,GAAOE,KAAM,SACxE,CAEA,SAASD,qBAEL,OADYE,KAAKC,MAAsB,GAAhBD,KAAKE,SAEhC,CAxFA1C,cAAcgC,SAAQC,IAClBA,EAAQU,iBAAiB,SAAS,WAC9B3C,cAAcS,UAAUmC,UAAUC,OAAO,YACzCpC,SAAWqC,SAASC,KAAKX,IACzBW,KAAKH,UAAUI,IAAI,WACvB,OAEJ3C,WAAW2B,SAAQC,IACfA,EAAQU,iBAAiB,SAAS,WAC9B,IAAIhC,EAAImC,SAASb,EAAQgB,aAAa,MAClCrC,EAAIkC,SAASb,EAAQgB,aAAa,MACnCvC,gBAAgBC,EAAGC,KACtBqB,EAAQC,UAAY,iBAAmB1B,KAAKC,UAAU8B,KAAM,UAC5DhC,MAAMK,GAAGD,GAAKH,KAAKC,UACnB0B,KAAK1B,UACFS,YACCU,MAAM,cAGd,OAMJzB,gBAAgB+C,QAAU,WACtBnB,WACJ,EA8DAT","sources":["js/cards.js"],"sourcesContent":["const handPositions = document.querySelectorAll(\".hand\");\nconst startgameButton = document.querySelector(\"button\");\nconst boardTiles = document.querySelectorAll(\".board .row .tile\");\nlet selected = 0;\nhandPositions.forEach(element => {\n    element.addEventListener(\"click\", function(){\n        handPositions[selected].classList.remove(\"selected\");\n        selected = parseInt(this.id);\n        this.classList.add(\"selected\");\n    })\n});\nboardTiles.forEach(element => {\n    element.addEventListener(\"click\", function(){\n        let x = parseInt(element.getAttribute(\"x\"))\n        let y = parseInt(element.getAttribute(\"y\"));\n        if(validatePlacing(x, y)){\n        element.innerHTML = \"<img src=\\\"img/\"+ hand[selected].Name +\".jpg\\\"/>\"\n        board[y][x] = hand[selected];\n        draw(selected);\n        if(checkWin()){\n            alert(\"You win!!!\");\n        }\n    }\n    })\n});\nlet cards;\nlet board;\nlet hand;\n\nstartgameButton.onclick = function() {\n    startGame();\n}\n\nfunction validatePlacing(x, y){\n    if(board[y][x] != null)return false;\n    if(compatibleTile(x, y - 1, \"up\", \"down\")) return false;\n    if(compatibleTile(x, y + 1, \"down\", \"up\")) return false;\n    if(compatibleTile(x + 1, y, \"right\", \"left\")) return false;\n    if(compatibleTile(x - 1, y, \"left\", \"right\")) return false;\n    return true;\n}\n\nfunction compatibleTile(x, y, Attributehand, Attributeboard){\n    console.log(y);\n    if((x<0 || x>3) || (y < 0 || y > 2)) return false;\n    if(board[y][x] == null) return false;\n    if(board[y][x][Attributeboard] == hand[selected][Attributehand]) return false;\n    return true;\n}\n\nfunction checkWin(){\n    for(let i=0; i<board.length; i++){\n        for(let e=0; e<board[0].length; e++){\n            if(board[i][e] === null) return false;\n        }\n    }\n    return true;\n}\n\nfunction loadJson(){\n    fetch(\"../json/cards.json\")\n        .then(response => {\n            if (response.ok) return response.json();\n            else {\n                alert(\"No s'ha pogut completar la cÃ rrega. Error \" + response.status)\n            }\n        })\n        .then(data => {\n            cards = data[\"cards\"];\n        });\n        \n}\nfunction startGame(){\n    board = [[null, null, null, null], [null, null, null, null], [null, null, null, null]];\n    hand = [null, null, null];\n    boardTiles.forEach(element => {\n        element.innerHTML = \"\";\n    });\n    draw(0);\n    draw(1);\n    draw(2);\n}\n\nfunction draw(id){\n    let value = getRandomCardValue();\n    hand[id] = cards[value];\n    handPositions[id].innerHTML = \"<img src=\\\"img/\"+ cards[value].Name +\".jpg\\\"/>\"\n}\n\nfunction getRandomCardValue(){\n    let value = Math.round(Math.random() * 10);\n    return value;\n}\nloadJson();\n"],"names":["handPositions","document","querySelectorAll","startgameButton","querySelector","boardTiles","cards","board","hand","selected","validatePlacing","x","y","compatibleTile","Attributehand","Attributeboard","console","log","checkWin","i","length","e","loadJson","fetch","then","response","ok","json","alert","status","data","startGame","forEach","element","innerHTML","draw","id","value","getRandomCardValue","Name","Math","round","random","addEventListener","classList","remove","parseInt","this","add","getAttribute","onclick"],"version":3,"file":"index.0ad83973.js.map"}